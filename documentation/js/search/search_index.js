var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.476,1,0.722]],["body/components/AppComponent.html",[0,0.791,1,1.139,2,0.531,3,0.427,4,1.36,5,1.36,6,1.36,7,0.333,8,1.675,9,1.36,10,2.52,11,2.22,12,2.351,13,1.909,14,3.021,15,1.909,16,3.021,17,0.782,18,2.351,19,3.785,20,1.909,21,0.938,22,0.069,23,1.36,24,1.36,25,2.206,26,1.125,27,2.152,28,0.531,29,0.531,30,0.427,31,0.648,32,0.938,33,1.909,34,1.909,35,1.909,36,2.392,37,1.36,38,1.316,39,1.36,40,0.648,41,1.36,42,0.938,43,1.36,44,1.36,45,0.044,46,0.044]],["title/modules/AppModule.html",[47,0.476,48,1.254]],["body/modules/AppModule.html",[1,1.326,2,0.447,3,0.359,7,0.281,22,0.071,28,1.074,29,0.447,30,0.529,31,0.545,32,0.789,40,1.174,45,0.039,46,0.039,47,0.529,48,2.327,49,0.947,50,1.657,51,2.003,52,2.077,53,1.41,54,1.41,55,1.41,56,1.41,57,1.699,58,1.699,59,2.077,60,1.41,61,1.145,62,1.812,63,1.687,64,2.669,65,2.077,66,1.145,67,2.669,68,1.812,69,1.812,70,1.145,71,1.812,72,1.812,73,1.812,74,1.812,75,1.812,76,1.812,77,1.396,78,1.396,79,1.812]],["title/components/BaseComponent.html",[0,0.476,40,0.722]],["body/components/BaseComponent.html",[0,0.68,1,0.45,2,0.369,3,0.297,4,0.946,5,0.946,6,0.946,7,0.232,9,0.946,10,2.167,11,1.975,13,1.46,15,1.46,17,0.543,18,1.797,20,1.46,21,1.229,22,0.07,23,1.46,24,1.46,25,1.783,26,1.475,28,0.783,29,0.369,30,0.297,31,0.45,32,0.652,33,1.46,34,1.46,35,1.46,36,2.005,37,0.946,38,1.229,39,0.946,40,0.955,41,0.946,42,0.652,43,0.946,44,0.946,45,0.034,46,0.034,80,1.164,81,3.173,82,2.31,83,2.31,84,2.822,85,2.196,86,3.902,87,3.173,88,0.946,89,1.496,90,3.624,91,1.496,92,1.164,93,1.164,94,2.31,95,2.31,96,2.31,97,1.496,98,2.31,99,2.31,100,2.469,101,2.31,102,2.31,103,2.31,104,2.31,105,1.496,106,1.164,107,0.946,108,1.496,109,1.496,110,1.164,111,3.173,112,3.624,113,1.797,114,2.31,115,1.797]],["title/modules/MaterialModule.html",[47,0.476,57,1.045]],["body/modules/MaterialModule.html",[2,0.654,3,0.526,7,0.411,22,0.071,28,1.018,29,0.654,30,0.69,31,0.798,45,0.051,46,0.051,47,0.526,50,1.386,57,1.516,63,2.2,106,2.063,116,2.651,117,3.886,118,3.886,119,3.886,120,3.886,121,3.886,122,3.886,123,2.063]],["title/interfaces/State.html",[124,1.254,125,1.515]],["body/interfaces/State.html",[2,0.7,3,0.563,7,0.44,22,0.071,28,0.897,30,0.797,45,0.054,46,0.054,70,1.794,77,1.484,78,2.1,124,1.902,125,2.3,126,1.794,127,2.839,128,2.831,129,2.839,130,2.839,131,1.794,132,2.839,133,3.638,134,2.209]],["title/components/WeatherCardComponent.html",[0,0.476,42,1.045]],["body/components/WeatherCardComponent.html",[0,0.764,1,0.592,2,0.485,3,0.39,4,1.243,5,1.243,6,1.243,7,0.305,9,1.243,10,2.435,11,2.014,13,1.791,15,1.791,17,0.715,22,0.068,25,2.725,26,1.482,28,0.485,29,0.485,30,0.39,31,0.592,32,0.857,33,1.791,34,1.791,35,1.791,36,2.297,37,1.243,38,1.235,39,1.243,40,0.592,41,1.243,42,1.584,43,2.435,44,1.243,45,0.042,46,0.042,88,2.1,135,2.585,136,2.585,137,1.531,138,2.834,139,3.322,140,2.834,141,2.834,142,2.205,143,3.635,144,1.967,145,1.967,146,1.531,147,1.967,148,2.834]],["title/modules/WeatherModule.html",[47,0.476,58,1.045]],["body/modules/WeatherModule.html",[2,0.749,3,0.602,7,0.47,22,0.071,28,1.022,29,0.749,30,0.602,31,0.914,45,0.056,46,0.056,47,0.602,50,1.587,58,1.654,63,2.399,149,3.036,150,3.796,151,2.362]],["title/injectables/WeatherService.html",[152,1.254,153,1.515]],["body/injectables/WeatherService.html",[2,0.589,3,0.474,7,0.37,12,1.858,17,0.867,20,2.33,21,1.414,22,0.07,26,1.697,28,0.909,29,0.589,30,0.474,31,0.719,38,1.414,45,0.048,46,0.048,85,1.858,88,1.509,92,2.525,93,2.525,100,2.869,107,1.509,110,1.858,142,2.525,146,2.525,152,1.928,153,2.051,154,1.858,155,3.245,156,2.388,157,3.956,158,2.388,159,3.245,160,3.245,161,2.388,162,2.388,163,2.388,164,2.388]],["title/coverage.html",[165,2.533]],["body/coverage.html",[0,0.722,1,0.701,7,0.361,8,1.813,21,1.015,22,0.068,40,0.701,42,1.015,45,0.047,46,0.047,77,1.218,78,1.218,80,1.813,124,1.218,125,1.472,126,2.301,131,2.017,135,1.813,136,1.813,137,1.813,152,1.218,153,1.472,154,1.813,165,1.813,166,2.33,167,2.33,168,2.33,169,4.533,170,2.33,171,2.33,172,2.33,173,4.338,174,2.678,175,3.192,176,1.813,177,1.813,178,2.484,179,1.813,180,1.813,181,1.813,182,2.33,183,2.33]],["title/dependencies.html",[49,1.505,184,2.011]],["body/dependencies.html",[22,0.071,29,0.647,45,0.051,46,0.051,49,1.371,51,1.657,65,2.689,66,2.184,70,1.657,107,1.657,123,2.04,151,2.04,185,2.622,186,4.634,187,2.622,188,2.622,189,2.622,190,2.622,191,2.622,192,2.622,193,2.622,194,2.622,195,2.622,196,2.622,197,2.622,198,2.622,199,2.622,200,2.622,201,2.622,202,2.622]],["title/index.html",[17,0.73,203,2.011,204,2.011]],["body/index.html",[0,0.696,3,0.431,7,0.336,11,1.136,22,0.045,38,0.946,45,0.045,46,0.045,61,1.373,181,1.69,205,2.172,206,3.04,207,3.8,208,3.508,209,3.508,210,2.172,211,2.172,212,2.172,213,3.04,214,4.256,215,4.256,216,2.172,217,2.172,218,2.172,219,2.172,220,2.172,221,2.172,222,2.172,223,2.172,224,2.172,225,3.508,226,2.172,227,4,228,2.172,229,2.172,230,2.172,231,2.172,232,2.172,233,2.172,234,1.69,235,3.04,236,4,237,3.04,238,3.04,239,2.172,240,3.8,241,2.172,242,2.172,243,2.172,244,3.508,245,2.172,246,2.172,247,2.172,248,2.172]],["title/modules.html",[47,0.646]],["body/modules.html",[22,0.059,45,0.059,46,0.059,47,0.665,48,1.753,57,1.461,58,1.461,66,2.119,249,3.353,250,3.353,251,4.329,252,4.035,253,4.035]],["title/overview.html",[254,2.533]],["body/overview.html",[0,0.514,1,1.342,22,0.066,30,0.514,32,1.13,40,1.157,45,0.051,46,0.051,47,0.681,48,2.438,49,1.356,50,1.356,51,1.639,52,2.018,53,2.018,54,2.018,55,2.018,56,2.018,57,1.675,58,1.675,59,2.67,60,2.018,61,1.639,113,2.67,115,2.67,124,1.356,152,1.356,254,2.018]],["title/miscellaneous/variables.html",[174,1.819,255,1.565]],["body/miscellaneous/variables.html",[17,0.8,21,1.752,22,0.07,23,2.541,24,2.541,45,0.045,46,0.045,77,1.848,78,2.102,126,1.392,128,2.388,131,2.631,134,1.713,174,1.392,176,1.713,177,1.713,178,1.713,179,2.75,180,2.75,234,2.388,255,1.713,256,3.069,257,2.202,258,2.202,259,3.069,260,2.202,261,3.069,262,2.202,263,3.823,264,3.069,265,3.069,266,3.069,267,3.069,268,2.202]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":113,"title":{},"body":{"components/BaseComponent.html":{},"overview.html":{}}}],["1/4",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":114,"title":{},"body":{"components/BaseComponent.html":{}}}],["2.5.4",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":115,"title":{},"body":{"components/BaseComponent.html":{},"overview.html":{}}}],["390f49ffd9f3bf1b179bdafb76571fec",{"_index":267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.1",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":211,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["991px",{"_index":96,"title":{},"body":{"components/BaseComponent.html":{}}}],["actionreduc",{"_index":127,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":128,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actual_compon",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["angular",{"_index":208,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":106,"title":{},"body":{"components/BaseComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/common",{"_index":151,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":163,"title":{},"body":{"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":123,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.compon",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app/base/base.compon",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app/weather/weather.modul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":228,"title":{},"body":{"index.html":{}}}],["automat",{"_index":220,"title":{},"body":{"index.html":{}}}],["avail",{"_index":253,"title":{},"body":{"modules.html":{}}}],["base",{"_index":81,"title":{},"body":{"components/BaseComponent.html":{}}}],["base'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["base.component.html",{"_index":83,"title":{},"body":{"components/BaseComponent.html":{}}}],["base.component.scss",{"_index":82,"title":{},"body":{"components/BaseComponent.html":{}}}],["basecompon",{"_index":40,"title":{"components/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap'",{"_index":99,"title":{},"body":{"components/BaseComponent.html":{}}}],["breakpoint",{"_index":86,"title":{},"body":{"components/BaseComponent.html":{}}}],["breakpointobserv",{"_index":90,"title":{},"body":{"components/BaseComponent.html":{}}}],["brows",{"_index":251,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":227,"title":{},"body":{"index.html":{}}}],["card",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["card.component.html",{"_index":141,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.scss",{"_index":140,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.t",{"_index":137,"title":{},"body":{"components/WeatherCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":145,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.ts:8",{"_index":144,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card/weath",{"_index":136,"title":{},"body":{"components/WeatherCardComponent.html":{},"coverage.html":{}}}],["chang",{"_index":222,"title":{},"body":{"index.html":{}}}],["check",{"_index":247,"title":{},"body":{"index.html":{}}}],["class",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["cli",{"_index":209,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":223,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":150,"title":{},"body":{"modules/WeatherModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["const",{"_index":133,"title":{},"body":{"interfaces/State.html":{}}}],["constructor",{"_index":88,"title":{},"body":{"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(breakpointobserv",{"_index":89,"title":{},"body":{"components/BaseComponent.html":{}}}],["constructor(http",{"_index":156,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(priv",{"_index":110,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["context",{"_index":179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":165,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createfeatureselector",{"_index":129,"title":{},"body":{"interfaces/State.html":{}}}],["createselector",{"_index":130,"title":{},"body":{"interfaces/State.html":{}}}],["css",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["declar",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{}}}],["depend",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":217,"title":{},"body":{"index.html":{}}}],["develop",{"_index":212,"title":{},"body":{"index.html":{}}}],["direct",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":226,"title":{},"body":{"index.html":{}}}],["directori",{"_index":231,"title":{},"body":{"index.html":{}}}],["dist",{"_index":230,"title":{},"body":{"index.html":{}}}],["document",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["dynam",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":241,"title":{},"body":{"index.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["end",{"_index":240,"title":{},"body":{"index.html":{}}}],["environ",{"_index":131,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.product",{"_index":134,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":132,"title":{},"body":{"interfaces/State.html":{}}}],["execut",{"_index":237,"title":{},"body":{"index.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["fals",{"_index":268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":233,"title":{},"body":{"index.html":{}}}],["further",{"_index":243,"title":{},"body":{"index.html":{}}}],["gener",{"_index":207,"title":{},"body":{"index.html":{}}}],["get",{"_index":203,"title":{"index.html":{}},"body":{}}],["getcitydata",{"_index":155,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcitydata(id",{"_index":160,"title":{},"body":{"injectables/WeatherService.html":{}}}],["go",{"_index":246,"title":{},"body":{"index.html":{}}}],["graph",{"_index":252,"title":{},"body":{"modules.html":{}}}],["handset",{"_index":98,"title":{},"body":{"components/BaseComponent.html":{}}}],["help",{"_index":244,"title":{},"body":{"index.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["http",{"_index":159,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":219,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":157,"title":{},"body":{"injectables/WeatherService.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":162,"title":{},"body":{"injectables/WeatherService.html":{}}}],["identifi",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":138,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["inject",{"_index":152,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["interfac",{"_index":124,"title":{"interfaces/State.html":{}},"body":{"interfaces/State.html":{},"coverage.html":{},"overview.html":{}}}],["ishandset",{"_index":87,"title":{},"body":{"components/BaseComponent.html":{}}}],["js",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":239,"title":{},"body":{"index.html":{}}}],["layoutmodul",{"_index":117,"title":{},"body":{"modules/MaterialModule.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"overview.html":{}}}],["link",{"_index":112,"title":{},"body":{"components/BaseComponent.html":{}}}],["map",{"_index":108,"title":{},"body":{"components/BaseComponent.html":{}}}],["matbuttonmodul",{"_index":119,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materialmodul",{"_index":57,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodul",{"_index":121,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":122,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":120,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":118,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":94,"title":{},"body":{"components/BaseComponent.html":{}}}],["menu",{"_index":111,"title":{},"body":{"components/BaseComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["metareduc",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":142,"title":{},"body":{"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{}}}],["miscellan",{"_index":255,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":47,"title":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":245,"title":{},"body":{"index.html":{}}}],["move",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navig",{"_index":218,"title":{},"body":{"index.html":{}}}],["new",{"_index":181,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":215,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":143,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["ngrx/store",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["object",{"_index":263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":100,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["observe(this.breakpoint",{"_index":102,"title":{},"body":{"components/BaseComponent.html":{}}}],["oninit",{"_index":139,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["option",{"_index":93,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":254,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":184,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":92,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["pipe(map(result",{"_index":103,"title":{},"body":{"components/BaseComponent.html":{}}}],["privat",{"_index":84,"title":{},"body":{"components/BaseComponent.html":{}}}],["prod",{"_index":232,"title":{},"body":{"index.html":{}}}],["product",{"_index":234,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":206,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{}}}],["protractor",{"_index":242,"title":{},"body":{"index.html":{}}}],["provid",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":164,"title":{},"body":{"injectables/WeatherService.html":{}}}],["readm",{"_index":248,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":85,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["reduc",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":221,"title":{},"body":{"index.html":{}}}],["requir",{"_index":180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.match",{"_index":104,"title":{},"body":{"components/BaseComponent.html":{}}}],["return",{"_index":146,"title":{},"body":{"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["root'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["run",{"_index":214,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":107,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":109,"title":{},"body":{"components/BaseComponent.html":{}}}],["scaffold",{"_index":224,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["serv",{"_index":216,"title":{},"body":{"index.html":{}}}],["server",{"_index":213,"title":{},"body":{"index.html":{}}}],["shared/material/material.modul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["spec\\.t",{"_index":262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.t",{"_index":259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/base/base.component.t",{"_index":80,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{}}}],["src/app/base/base.component.ts:15",{"_index":97,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/base/base.component.ts:17",{"_index":105,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/base/base.component.ts:19",{"_index":91,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/reducers/index.t",{"_index":126,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/material/material.module.t",{"_index":116,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/weather/shared/weather.service.t",{"_index":154,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather/shared/weather.service.ts:11",{"_index":161,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/shared/weather.service.ts:8",{"_index":158,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weath",{"_index":135,"title":{},"body":{"components/WeatherCardComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":149,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/environments/environment.prod.t",{"_index":176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":204,"title":{"index.html":{}},"body":{}}],["state",{"_index":125,"title":{"interfaces/State.html":{}},"body":{"interfaces/State.html":{},"coverage.html":{}}}],["statement",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":229,"title":{},"body":{"index.html":{}}}],["storemodul",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reduc",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/WeatherService.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["support",{"_index":249,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":250,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["test",{"_index":236,"title":{},"body":{"index.html":{}}}],["this.breakpointobserv",{"_index":101,"title":{},"body":{"components/BaseComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["true",{"_index":261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":235,"title":{},"body":{"index.html":{}}}],["us",{"_index":225,"title":{},"body":{"index.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["variabl",{"_index":174,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":210,"title":{},"body":{"index.html":{}}}],["via",{"_index":238,"title":{},"body":{"index.html":{}}}],["void",{"_index":147,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["weather",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{}}}],["weather_api",{"_index":264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather_api_key",{"_index":266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weatherapp",{"_index":205,"title":{},"body":{"index.html":{}}}],["weathercardcompon",{"_index":42,"title":{"components/WeatherCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"coverage.html":{}}}],["weathermodul",{"_index":58,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservic",{"_index":153,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["width",{"_index":95,"title":{},"body":{"components/BaseComponent.html":{}}}],["work",{"_index":148,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["zone.j",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'weather-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weather-app';\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBaseComponent\n\nBaseComponent\n\nAppModule -->\n\nBaseComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BaseComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\n\nimport { WeatherModule } from '@app/weather/weather.module';\nimport { MaterialModule } from '@shared/material/material.module';\n\nimport { BaseComponent } from '@app/base/base.component';\nimport { AppComponent } from '@app/app.component';\n\n// TODO move?\nimport { reducers, metaReducers } from './reducers';\n\n@NgModule({\n  declarations: [AppComponent, BaseComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    WeatherModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/base/base.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base\n            \n\n            \n                styleUrls\n                base.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./base.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                BREAKPOINT\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/base/base.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            BREAKPOINT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BREAKPOINT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '(max-width: 991px)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base/base.component.ts:15\n                            \n                        \n\n                \n                    \n                        Handset breakpoint based on Bootstrap's breakpoints\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHandset$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver\n    .observe(this.BREAKPOINT)\n    .pipe(map(result => result.matches))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base/base.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss'],\n})\nexport class BaseComponent {\n  /**\n   * Handset breakpoint based on Bootstrap's breakpoints\n   */\n  private readonly BREAKPOINT = '(max-width: 991px)';\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(this.BREAKPOINT)\n    .pipe(map(result => result.matches));\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      Link 1\n      Link 2\n      Link 3\n    \n  \n  \n    \n      \n        menu\n      \n      Weather App\n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu          Link 1      Link 2      Link 3                          menu            Weather App          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  exports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/index.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n} from '@ngrx/store';\nimport { environment } from '@environments/environment';\n\nexport interface State {}\n\nexport const reducers: ActionReducerMap = {};\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? []\n  : [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherCardComponent.html":{"url":"components/WeatherCardComponent.html","title":"component - WeatherCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-card/weather-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-card\n            \n\n            \n                styleUrls\n                weather-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-card/weather-card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-card/weather-card.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss'],\n})\nexport class WeatherCardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  weather-card works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather-card works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/weather.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCityData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCityData(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/shared/weather.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(private readonly http: HttpClient) {}\n\n  getCityData(id: string): Observable {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/base/base.component.ts\n            \n            \n                component\n            \n            \n                BaseComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                interface\n            \n            \n                State\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                variable\n            \n            \n                metaReducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/reducers/index.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-card/weather-card.component.ts\n            \n            \n                component\n            \n            \n                WeatherCardComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            bootstrap-css-only : ^4.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherApp\nThis project was generated with Angular CLI version 6.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBaseComponent\n\nBaseComponent\n\nAppModule -->\n\nBaseComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  WEATHER_API: 'https://api.openweathermap.org/data/2.5',\n  WEATHER_API_KEY: '390f49ffd9f3bf1b179bdafb76571fec',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  WEATHER_API: 'https://api.openweathermap.org/data/2.5',\n  WEATHER_API_KEY: '390f49ffd9f3bf1b179bdafb76571fec',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/reducers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        metaReducers:     MetaReducer[]\n\n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production\n  ? []\n  : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
